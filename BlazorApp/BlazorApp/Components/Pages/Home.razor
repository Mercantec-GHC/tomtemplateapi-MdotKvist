@page "/"
@rendermode InteractiveServer
@inject HttpClient Http
@using System.Text.Json
@using System.Text.Json.Serialization
@using ApexCharts

<PageTitle>Home</PageTitle>


@if (apiDataList.Any())
{

    <ApexChart TItem="Data" Title="Fuel Prices" XAxisType="XAxisType.Datetime">
        <ApexPointSeries TItem="Data" Items="@(apiDataList.SelectMany(x => x.DieselData).ToList())" Name="Diesel" SeriesType="SeriesType.Area" XValue="@(e => e.Date)" YValue="@(e => e.PriceDecimal)" />
        <ApexPointSeries TItem="Data" Items="@(apiDataList.SelectMany(x => x.MilesData).ToList())" Name="Miles95" SeriesType="SeriesType.Area" XValue="@(e => e.Date)" YValue="@(e => e.PriceDecimal)" />
    </ApexChart>

    <div class="container">
        <div class="row">
            <!-- Diesel Data Table -->
            <div class="col-md-6">
                <h3>Diesel Data Table:</h3>
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Date</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var data in apiDataList.SelectMany(x => x.DieselData))
                        {
                            <tr>
                                <td>@data.Date.ToString("dd-MM-yyyy")</td>
                                <td>@data.Price</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Miles Data Table -->
            <div class="col-md-6">
                <h3>Miles Data Table:</h3>
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Date</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var data in apiDataList.SelectMany(x => x.MilesData))
                        {
                            <tr>
                                <td>@data.Date.ToString("dd-MM-yyyy")</td>
                                <td>@data.Price</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <p>No data available.</p>
}

@code {
    private List<ApiUrl> apiUrls = new List<ApiUrl>
    {
        new ApiUrl { Diesel = "https://magsapi.onrender.com/api/diesel", Miles = "https://magsapi.onrender.com/api/miles95" },
    };

    private List<ApiData> apiDataList = new List<ApiData>();

    protected override async Task OnInitializedAsync()
    {
        foreach (var apiUrl in apiUrls)
        {
            // Fetch JSON data
            var dieselJson = await FetchApiData(apiUrl.Diesel);
            var milesJson = await FetchApiData(apiUrl.Miles);
            Console.WriteLine(dieselJson);
            Console.WriteLine(milesJson);


            // Deserialize JSON data
            var dieselData = JsonSerializer.Deserialize<List<Data>>(dieselJson);
            var milesData = JsonSerializer.Deserialize<List<Data>>(milesJson);

            // Convert Price from string to decimal
            if (dieselData != null)
            {
                foreach (var data in dieselData)
                {
                    if (decimal.TryParse(data.Price, out var price))
                    {
                        data.PriceDecimal = price;
                    }
                    else
                    {
                        data.PriceDecimal = 0;
                    }
                }
            }

            if (milesData != null)
            {
                foreach (var data in milesData)
                {
                    if (decimal.TryParse(data.Price, out var price))
                    {
                        data.PriceDecimal = price;
                    }
                    else
                    {
                        data.PriceDecimal = 0;
                    }
                }
            }

            // Add to apiDataList
            apiDataList.Add(new ApiData
                {
                    DieselData = dieselData,
                    MilesData = milesData
                });
        }

        StateHasChanged();
    }

    // Method to fetch API data
    async Task<string> FetchApiData(string url)
    {
        try
        {
            return await Http.GetStringAsync(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data from {url}: {ex.Message}");
            return $"Error fetching data: {ex.Message}";
        }
    }
}



